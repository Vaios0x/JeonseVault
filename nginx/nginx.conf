# ============================================================================
# JeonseVault Nginx Configuration
# Configuración optimizada para producción con seguridad y performance
# ============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuración de eventos
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configuración HTTP principal
http {
    # ============================================================================
    # CONFIGURACIÓN BÁSICA
    # ============================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Configuración de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Configuración de buffers
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Configuración de timeouts
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;
    
    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ============================================================================
    # CONFIGURACIÓN DE SEGURIDAD
    # ============================================================================
    
    # Headers de seguridad
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.coingecko.com https://api.etherscan.io wss:; frame-ancestors 'self';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Configuración de rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/s;
    
    # Configuración de IP blocking
    geo $bad_bot {
        default 0;
        # Agregar IPs maliciosas aquí
        # 192.168.1.100 1;
    }
    
    # ============================================================================
    # CONFIGURACIÓN DE UPSTREAM
    # ============================================================================
    
    upstream jeonsevault_backend {
        server jeonsevault:3000;
        keepalive 32;
    }
    
    # ============================================================================
    # CONFIGURACIÓN DE SERVIDORES
    # ============================================================================
    
    # Servidor HTTP (redirección a HTTPS)
    server {
        listen 80;
        server_name _;
        
        # Redirección a HTTPS
        return 301 https://$host$request_uri;
    }
    
    # Servidor HTTPS principal
    server {
        listen 443 ssl http2;
        server_name jeonsevault.com www.jeonsevault.com;
        
        # ============================================================================
        # CONFIGURACIÓN SSL/TLS
        # ============================================================================
        ssl_certificate /etc/nginx/ssl/jeonsevault.crt;
        ssl_certificate_key /etc/nginx/ssl/jeonsevault.key;
        
        # Configuración SSL moderna
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/chain.crt;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # ============================================================================
        # CONFIGURACIÓN DE RUTAS
        # ============================================================================
        
        # Root directory
        root /var/www/html;
        index index.html index.htm;
        
        # ============================================================================
        # RUTAS DE LA APLICACIÓN
        # ============================================================================
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API routes con rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # Rutas de autenticación con rate limiting estricto
        location ~ ^/(login|register|reset-password) {
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
        
        # Rutas de transacciones blockchain
        location ~ ^/(deposit|investment|wallet) {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 60s;
        }
        
        # Rutas estáticas optimizadas
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Service Worker
        location /sw.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Manifest PWA
        location /manifest.json {
            add_header Cache-Control "public, max-age=3600";
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Rutas principales con rate limiting general
        location / {
            limit_req zone=general burst=50 nodelay;
            
            proxy_pass http://jeonsevault_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Configuración de cache para páginas
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
        }
        
        # ============================================================================
        # CONFIGURACIÓN DE SEGURIDAD ADICIONAL
        # ============================================================================
        
        # Bloquear archivos sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear user agents maliciosos
        if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
            return 403;
        }
        
        # Bloquear IPs maliciosas
        if ($bad_bot) {
            return 403;
        }
        
        # ============================================================================
        # CONFIGURACIÓN DE ERRORES
        # ============================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
    
    # ============================================================================
    # SERVIDOR DE MONITORING (solo acceso interno)
    # ============================================================================
    
    server {
        listen 8080;
        server_name localhost;
        
        # Solo permitir acceso desde localhost
        allow 127.0.0.1;
        allow 172.20.0.0/16;
        deny all;
        
        location /nginx_status {
            stub_status on;
            access_log off;
        }
        
        location / {
            return 404;
        }
    }
}
